"use client";
import React, { ButtonHTMLAttributes, forwardRef } from "react";

interface iconsComponent extends ButtonHTMLAttributes<HTMLButtonElement> {}

const MenuBar = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="currentColor"
      >
        <path
          fillRule="evenodd"
          d="M3 6.75A.75.75 0 013.75 6h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 6.75zM3 12a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 12zm0 5.25a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z"
          clipRule="evenodd"
        />
      </svg>
    );
  }
);

const CloseIcon = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        viewBox="0 0 24 24"
        fill="currentColor"
      >
        <path
          fillRule="evenodd"
          d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z"
          clipRule="evenodd"
        />
      </svg>
    );
  }
);

const SettingsIcon = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.324.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 011.37.49l1.296 2.247a1.125 1.125 0 01-.26 1.431l-1.003.827c-.293.24-.438.613-.431.992a6.759 6.759 0 010 .255c-.007.378.138.75.43.99l1.005.828c.424.35.534.954.26 1.43l-1.298 2.247a1.125 1.125 0 01-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.57 6.57 0 01-.22.128c-.331.183-.581.495-.644.869l-.213 1.28c-.09.543-.56.941-1.11.941h-2.594c-.55 0-1.02-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 01-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 01-1.369-.49l-1.297-2.247a1.125 1.125 0 01.26-1.431l1.004-.827c.292-.24.437-.613.43-.992a6.932 6.932 0 010-.255c.007-.378-.138-.75-.43-.99l-1.004-.828a1.125 1.125 0 01-.26-1.43l1.297-2.247a1.125 1.125 0 011.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.087.22-.128.332-.183.582-.495.644-.869l.214-1.281z"
        />
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
        />
      </svg>
    );
  }
);

const Support = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 01-.825-.242m9.345-8.334a2.126 2.126 0 00-.476-.095 48.64 48.64 0 00-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0011.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155"
        />
      </svg>
    );
  }
);

const ArrowSimple = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M19.5 8.25l-7.5 7.5-7.5-7.5"
        />
      </svg>
    );
  }
);

const Customers = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"
        />
      </svg>
    );
  }
);

const Workers = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z"
        />
      </svg>
    );
  }
);

const Add = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M12 4.5v15m7.5-7.5h-15"
        />
      </svg>
    );
  }
);

const Bars = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 20 20"
        fill="currentColor"
        className={className}
      >
        <path d="M15.5 2A1.5 1.5 0 0014 3.5v13a1.5 1.5 0 001.5 1.5h1a1.5 1.5 0 001.5-1.5v-13A1.5 1.5 0 0016.5 2h-1zM9.5 6A1.5 1.5 0 008 7.5v9A1.5 1.5 0 009.5 18h1a1.5 1.5 0 001.5-1.5v-9A1.5 1.5 0 0010.5 6h-1zM3.5 10A1.5 1.5 0 002 11.5v5A1.5 1.5 0 003.5 18h1A1.5 1.5 0 006 16.5v-5A1.5 1.5 0 004.5 10h-1z" />
      </svg>
    );
  }
);

const Attachments = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13"
        />
      </svg>
    );
  }
);

const Check = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M4.5 12.75l6 6 9-13.5"
        />
      </svg>
    );
  }
);

const Filter = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 01-.659 1.591l-5.432 5.432a2.25 2.25 0 00-.659 1.591v2.927a2.25 2.25 0 01-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 00-.659-1.591L3.659 7.409A2.25 2.25 0 013 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0112 3z"
        />
      </svg>
    );
  }
);

const Download = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"
        />
      </svg>
    );
  }
);

const Refresh = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99"
        />
      </svg>
    );
  }
);

const User = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z"
        />
      </svg>
    );
  }
);

const CreditCard = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z"
        />
      </svg>
    );
  }
);

const AddUser = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M19 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zM4 19.235v-.11a6.375 6.375 0 0112.75 0v.109A12.318 12.318 0 0110.374 21c-2.331 0-4.512-.645-6.374-1.766z"
        />
      </svg>
    );
  }
);

const Question = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z"
        />
      </svg>
    );
  }
);

const Logout = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15M12 9l-3 3m0 0l3 3m-3-3h12.75"
        />
      </svg>
    );
  }
);

const Location = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M15 10.5a3 3 0 11-6 0 3 3 0 016 0z"
        />
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z"
        />
      </svg>
    );
  }
);

const Notifications = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M3.124 7.5A8.969 8.969 0 015.292 3m13.416 0a8.969 8.969 0 012.168 4.5"
        />
      </svg>
    );
  }
);

const Envelope = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75"
        />
      </svg>
    );
  }
);

const GlobeIcon = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 017.843 4.582M12 3a8.997 8.997 0 00-7.843 4.582m15.686 0A11.953 11.953 0 0112 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0121 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0112 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 013 12c0-1.605.42-3.113 1.157-4.418"
        />
      </svg>
    );
  }
);

const GoogleIcon = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        viewBox="0 0 186.69 190.5"
      >
        <g transform="translate(1184.583 765.171)">
          <path
            clipPath="none"
            mask="none"
            d="M-1089.333-687.239v36.888h51.262c-2.251 11.863-9.006 21.908-19.137 28.662l30.913 23.986c18.011-16.625 28.402-41.044 28.402-70.052 0-6.754-.606-13.249-1.732-19.483z"
            fill="#4285f4"
          />
          <path
            clipPath="none"
            mask="none"
            d="M-1142.714-651.791l-6.972 5.337-24.679 19.223h0c15.673 31.086 47.796 52.561 85.03 52.561 25.717 0 47.278-8.486 63.038-23.033l-30.913-23.986c-8.486 5.715-19.31 9.179-32.125 9.179-24.765 0-45.806-16.712-53.34-39.226z"
            fill="#34a853"
          />
          <path
            clipPath="none"
            mask="none"
            d="M-1174.365-712.61c-6.494 12.815-10.217 27.276-10.217 42.689s3.723 29.874 10.217 42.689c0 .086 31.693-24.592 31.693-24.592-1.905-5.715-3.031-11.776-3.031-18.098s1.126-12.383 3.031-18.098z"
            fill="#fbbc05"
          />
          <path
            d="M-1089.333-727.244c14.028 0 26.497 4.849 36.455 14.201l27.276-27.276c-16.539-15.413-38.013-24.852-63.731-24.852-37.234 0-69.359 21.388-85.032 52.561l31.692 24.592c7.533-22.514 28.575-39.226 53.34-39.226z"
            fill="#ea4335"
            clipPath="none"
            mask="none"
          />
        </g>
      </svg>
    );
  }
);

const LockIcon = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        viewBox="0 0 42 42"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M35.616 19.0261H34.146V13.6081C34.146 6.5521 28.392 0.756104 21.294 0.756104C14.196 0.756104 8.484 6.5521 8.484 13.6081V19.0261H7.014C6.048 19.0261 5.166 19.8241 5.166 20.8741V39.2281C5.166 40.1941 5.964 41.0761 7.014 41.0761H35.658C36.624 41.0761 37.506 40.2781 37.506 39.2281V20.8741C37.464 19.8661 36.666 19.0261 35.616 19.0261ZM13.65 13.6081C13.65 9.4081 17.094 5.9641 21.294 5.9641C25.494 5.9641 28.98 9.4081 28.98 13.6081V19.0261H13.65V13.6081ZM23.184 30.7441V34.6501C23.184 35.7001 22.344 36.5401 21.294 36.5401C20.244 36.5401 19.404 35.7001 19.404 34.6501V30.7441C18.564 30.1561 17.976 29.1481 17.976 28.0141C17.976 26.1661 19.446 24.6961 21.294 24.6961C23.142 24.6961 24.612 26.1661 24.612 28.0141C24.612 29.1901 24.024 30.1561 23.184 30.7441Z"
          fill="white"
        />
      </svg>
    );
  }
);

const Arrow = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        className={className}
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M15.75 19.5L8.25 12l7.5-7.5"
        />
      </svg>
    );
  }
);

const Phone = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z"
        />
      </svg>
    );
  }
);

const Message = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
        />
      </svg>
    );
  }
);

const Afna = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          d="M16.5 12a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 10-2.636 6.364M16.5 12V8.25"
        />
      </svg>
    );
  }
);

const Office = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        className={className}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M2.25 21h19.5m-18-18v18m10.5-18v18m6-13.5V21M6.75 6.75h.75m-.75 3h.75m-.75 3h.75m3-6h.75m-.75 3h.75m-.75 3h.75M6.75 21v-3.375c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21M3 3h12m-.75 4.5H21m-3.75 3.75h.008v.008h-.008v-.008zm0 3h.008v.008h-.008v-.008zm0 3h.008v.008h-.008v-.008z"
        />
      </svg>
    );
  }
);
const Search = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        stroke-width="1.5"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
        />
      </svg>
    );
  }
);
const Trophy = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        viewBox="0 0 70 82"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        stroke="currentColor"
        className={className}
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M14.5283 0.0989929C13.3565 0.459719 12.3477 1.36242 11.8902 2.45982C11.7421 2.81509 11.6506 3.54696 11.6506 4.3769V5.71949H8.61979C6.95286 5.71949 5.20772 5.80058 4.74153 5.89961C2.10767 6.45969 0.197963 8.57758 0.0148455 11.1414C-0.203137 14.1942 2.00835 20.4673 4.74345 24.5545C7.27031 28.3306 10.9128 31.8265 14.4516 33.8718C15.5105 34.4838 15.513 34.487 16.3618 36.2724C19.014 41.8511 22.341 45.9636 26.2805 48.5331C27.0701 49.0481 28.0237 49.5872 28.3996 49.7309C29.1383 50.0136 29.1619 50.0758 29.0911 51.5514C29.0001 53.4469 28.1982 55.2848 26.82 56.7564C25.7406 57.9089 24.6129 58.6188 22.9255 59.2081C20.9324 59.9042 21.0154 59.6488 20.9595 65.2643L20.9128 69.9803H18.6067C16.6659 69.9803 16.1603 70.0329 15.4155 70.3122C14.2443 70.7513 12.9126 71.9811 12.3373 73.1549C11.8999 74.0475 11.8894 74.1347 11.8388 77.2972C11.7956 80.0074 11.8283 80.6071 12.0415 81.0204C12.5806 82.065 11.0306 81.9992 35.0801 81.9992C54.149 81.9992 56.985 81.9687 57.3883 81.7598C58.3071 81.2837 58.3497 81.1014 58.3497 77.6427C58.3497 73.7307 58.1974 73.1823 56.6869 71.6503C55.2755 70.2189 54.5411 69.9803 51.5466 69.9803H49.2338V65.3567C49.2338 59.7207 49.3068 59.9354 47.1235 59.1504C45.4009 58.531 44.3487 57.861 43.309 56.721C41.8924 55.1678 41.0774 53.1347 41.0774 51.1537V50.0128L41.8371 49.6436C46.3987 47.4267 50.6106 42.6536 53.6363 36.2724C54.3996 34.6623 54.5528 34.4466 55.1773 34.1018C58.5926 32.2166 62.1385 28.9343 64.8632 25.1364C67.7215 21.1523 70.214 14.342 69.9854 11.1414C69.8023 8.57758 67.8926 6.45969 65.2587 5.89961C64.7925 5.80058 63.0474 5.71949 61.3805 5.71949H58.3497V4.49613C58.3497 3.82324 58.2662 2.99345 58.164 2.65196C57.9238 1.8483 57.0514 0.834707 56.2135 0.385683L55.5509 0.0305655L35.24 0.00300229C24.069 -0.0120613 14.7487 0.0310463 14.5283 0.0989929ZM54.6713 8.88718C54.6713 14.5945 54.4909 18.0372 54.0185 21.344C52.7234 30.4083 49.3705 38.1175 44.6782 42.8204C42.3723 45.1312 40.2546 46.4351 37.7741 47.0708C36.2876 47.4517 33.9219 47.4844 32.4803 47.1437C25.023 45.3819 18.4787 35.7602 16.2949 23.3472C15.5941 19.3644 15.4722 17.6746 15.378 10.6472L15.2864 3.79647H34.9789H54.6713V8.88718ZM11.6989 14.2529C11.7645 17.6468 11.8771 19.5593 12.107 21.1838C12.4141 23.354 13.0832 26.8552 13.4066 27.9839C13.4933 28.2864 13.5321 28.5664 13.4928 28.6056C13.3313 28.7677 9.25742 24.4449 8.3396 23.1375C6.4897 20.503 4.85444 16.8704 4.10949 13.7412C3.55582 11.4151 3.71447 10.5559 4.82229 9.87898C5.28305 9.59758 5.6432 9.56665 8.47074 9.56617L11.6081 9.56553L11.6989 14.2529ZM65.0604 9.8027C66.2365 10.4121 66.4457 11.4403 65.8761 13.8122C64.9528 17.6561 63.0319 21.5126 60.465 24.676C59.5995 25.7426 56.5986 28.6971 56.4907 28.589C56.4606 28.5588 56.507 28.2864 56.5937 27.9839C56.917 26.8552 57.5862 23.354 57.8932 21.1838C58.1232 19.5593 58.2358 17.6468 58.3014 14.2529L58.3922 9.56553H61.4975C63.9264 9.56553 64.7025 9.61713 65.0604 9.8027ZM34.2005 11.282C33.7137 11.5313 33.4499 11.9448 32.1784 14.4522L30.7158 17.3358L27.7803 17.7585C26.1657 17.9911 24.6414 18.276 24.3929 18.3917C23.8151 18.6606 23.4853 19.304 23.4853 20.1622C23.4853 20.819 23.5542 20.9089 25.7955 23.1749L28.1058 25.5105L27.635 28.2348C27.0176 31.8063 27.0216 32.0507 27.7074 32.7379C28.6036 33.6359 29.1068 33.5422 32.3061 31.8805L35.0059 30.4783L37.7032 31.8805C40.8981 33.5414 41.3977 33.6348 42.2929 32.7379C42.9786 32.0507 42.9826 31.8063 42.3653 28.2348L41.8945 25.5105L44.2048 23.1749C46.446 20.9089 46.515 20.819 46.515 20.1622C46.515 19.2202 46.1639 18.6249 45.4415 18.342C45.1084 18.2116 43.587 17.935 42.0608 17.7273L39.2861 17.3501L37.8643 14.5042C37.0155 12.8055 36.2935 11.5603 36.0728 11.4155C35.4625 11.0147 34.8125 10.9684 34.2005 11.282ZM35.8394 18.934C36.725 20.72 36.8751 20.8248 38.9584 21.1081C39.7719 21.2189 40.4377 21.348 40.4377 21.3953C40.4377 21.4426 39.8979 22.0371 39.2382 22.7162C38.0426 23.9473 38.0388 23.9542 38.0472 24.811C38.0519 25.2839 38.1486 26.1911 38.2622 26.8272L38.4688 27.9835L36.942 27.1877C36.1022 26.7501 35.2387 26.3919 35.0232 26.3919C34.8074 26.3919 33.9158 26.7581 33.0416 27.2055C31.7912 27.8457 31.4707 27.9566 31.538 27.7263C31.7394 27.039 31.9615 25.473 31.9615 24.7417C31.9615 23.9749 31.9258 23.9148 30.762 22.7162C30.1023 22.0371 29.5626 21.4426 29.5626 21.3953C29.5626 21.348 30.2282 21.2189 31.0419 21.1081C33.1251 20.8248 33.2753 20.72 34.1608 18.934C34.5742 18.1 34.9518 17.4178 35.0001 17.4178C35.0484 17.4178 35.426 18.1 35.8394 18.934ZM37.2993 52.2136C37.4832 54.1967 38.4792 56.725 39.7167 58.3496C40.0374 58.7704 40.2698 59.1448 40.2332 59.1813C40.1965 59.218 37.8469 59.2289 35.0115 59.2057L29.8564 59.1633L30.4056 58.4422C31.7526 56.6734 32.6928 54.3306 32.8627 52.3203L32.9614 51.1508H35.0811H37.2007L37.2993 52.2136ZM45.3955 66.5349V69.9803H35.0801H24.7647V66.5349V63.0895H35.0801H45.3955V66.5349ZM53.5518 73.9469C54.3873 74.365 54.6708 75.0754 54.671 76.7509L54.6713 78.1531H35.0615H15.4516L15.5149 76.5766C15.5861 74.8004 15.8134 74.2691 16.6603 73.8999C17.0819 73.7163 20.2069 73.6776 35.0801 73.6727C51.8201 73.6671 53.0287 73.685 53.5518 73.9469Z"
        />
      </svg>
    );
  }
);
const House = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        viewBox="0 0 60 60"
        stroke="currentColor"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M34.4758 3.42541C30.1845 5.30398 26.551 6.95824 26.4012 7.10149C26.1375 7.35375 26.129 7.4342 26.129 9.67053C26.129 11.9602 26.1315 11.9815 26.426 12.276C26.8132 12.6634 27.1433 12.6506 28.125 12.2101C28.5699 12.0104 28.9559 11.8471 28.983 11.8471C29.0101 11.8471 29.0323 13.0993 29.0323 14.6298V17.4125H15.7808H2.52931L2.23246 17.7095C1.94335 17.9986 1.93548 18.0551 1.93548 19.8322C1.93548 21.6094 1.94335 21.6659 2.23246 21.955C2.51843 22.2411 2.58944 22.252 4.16794 22.252H5.80645V24.6717V27.0915H4.16794C2.58944 27.0915 2.51843 27.1024 2.23246 27.3885C1.94335 27.6775 1.93548 27.734 1.93548 29.5112C1.93548 31.2884 1.94335 31.3449 2.23246 31.6339C2.47621 31.8779 2.64919 31.931 3.2002 31.931H3.87097V43.5457V55.1605H2.23246C0.653952 55.1605 0.582944 55.1714 0.296976 55.4575C0.00786288 55.7466 0 55.8031 0 57.5803C0 59.3574 0.00786288 59.4139 0.296976 59.703L0.593831 60H30H59.4062L59.703 59.703C59.9921 59.4139 60 59.3574 60 57.5803C60 55.8031 59.9921 55.7466 59.703 55.4575C59.4171 55.1714 59.346 55.1605 57.7675 55.1605H56.129V43.5457V31.931H56.7998C57.3508 31.931 57.5238 31.8779 57.7675 31.6339C58.0567 31.3449 58.0645 31.2884 58.0645 29.5112C58.0645 27.734 58.0567 27.6775 57.7675 27.3885C57.5238 27.1446 57.3508 27.0915 56.7998 27.0915H56.129V19.4693C56.129 15.2771 56.1512 11.8471 56.1783 11.8471C56.2054 11.8471 56.5914 12.0104 57.0363 12.2101C58.0179 12.6506 58.3481 12.6634 58.7353 12.276C59.0297 11.9816 59.0323 11.9591 59.0323 9.68819C59.0323 7.68271 59.0059 7.36609 58.8206 7.14649C58.5716 6.85153 42.93 -0.0143749 42.5399 2.26112e-05C42.3959 0.00534605 38.7671 1.54684 34.4758 3.42541ZM49.7314 5.14355C53.616 6.84669 56.8625 8.26805 56.9456 8.30217C57.0469 8.34391 57.0968 8.654 57.0968 9.24381V10.1231L49.9508 6.9926C46.0206 5.27071 42.7079 3.86193 42.5892 3.86193C42.4227 3.86193 33.7454 7.60661 28.7601 9.82975L28.0645 10.14V9.2553V8.37076L35.2319 5.22195C39.1738 3.49014 42.4598 2.06733 42.5338 2.06019C42.6079 2.05305 45.8468 3.44054 49.7314 5.14355ZM48.3987 8.4315L54.1331 10.9443L54.1642 19.0179L54.1952 27.0915H42.5806H30.966L30.9971 19.0225L31.0282 10.9535L36.7137 8.44795C39.8407 7.06991 42.4588 5.93699 42.5318 5.93057C42.6047 5.92404 45.2448 7.04946 48.3987 8.4315ZM32.2325 12.87L31.9355 13.1669V16.9286V20.6902L32.2325 20.9871L32.5293 21.2841H36.7742H41.0191L41.3159 20.9871L41.6129 20.6902V16.9286V13.1669L41.3159 12.87L41.0191 12.573H36.7742H32.5293L32.2325 12.87ZM43.8454 12.87L43.5484 13.1669V16.9286V20.6902L43.8454 20.9871L44.1422 21.2841H48.3871H52.632L52.9288 20.9871L53.2258 20.6902V16.9286V13.1669L52.9288 12.87L52.632 12.573H48.3871H44.1422L43.8454 12.87ZM39.6774 16.9286V19.3483H36.7742H33.871V16.9286V14.5088H36.7742H39.6774V16.9286ZM51.2903 16.9286V19.3483H48.3871H45.4839V16.9286V14.5088H48.3871H51.2903V16.9286ZM29.0323 19.8322V20.3162H16.4516H3.87097V19.8322V19.3483H16.4516H29.0323V19.8322ZM11.6129 24.6717V27.0915H9.67742H7.74194V24.6717V22.252H9.67742H11.6129V24.6717ZM17.4194 24.6717V27.0915H15.4839H13.5484V24.6717V22.252H15.4839H17.4194V24.6717ZM23.2258 24.6717V27.0915H21.2903H19.3548V24.6717V22.252H21.2903H23.2258V24.6717ZM29.0323 24.6717V27.0915H27.0968H25.1613V24.6717V22.252H27.0968H29.0323V24.6717ZM56.129 29.5112V29.9952H30H3.87097V29.5112V29.0273H30H56.129V29.5112ZM29.0323 43.5457V55.1605H28.0645H27.0968V48.3852C27.0968 42.3549 27.1173 41.6099 27.2837 41.6099C27.3865 41.6099 27.6042 41.4763 27.7675 41.3129C28.0567 41.0239 28.0645 40.9674 28.0645 39.1902C28.0645 37.413 28.0567 37.3565 27.7675 37.0675L27.4707 36.7705H17.4194H7.36802L7.07117 37.0675C6.78206 37.3565 6.77419 37.413 6.77419 39.1902C6.77419 40.9674 6.78206 41.0239 7.07117 41.3129C7.23448 41.4763 7.45222 41.6099 7.55504 41.6099C7.72137 41.6099 7.74194 42.3549 7.74194 48.3852V55.1605H6.77419H5.80645V43.5457V31.931H17.4194H29.0323V43.5457ZM54.1935 43.5457V55.1605H48.3871H42.5806V48.6823V42.2039L42.2837 41.907L41.9868 41.6099H37.2581H32.5293L32.2325 41.907L31.9355 42.2039V48.6823V55.1605H31.4516H30.9677V43.5457V31.931H42.5806H54.1935V43.5457ZM26.129 39.1902V39.6741H17.4194H8.70968V39.1902V38.7062H17.4194H26.129V39.1902ZM25.1613 48.3852V55.1605H17.4194H9.67742V48.3852V41.6099H17.4194H25.1613V48.3852ZM43.8454 41.907L43.5484 42.2039V45.9655V49.7271L43.8454 50.024L44.1422 50.321H48.3871H52.632L52.9288 50.024L53.2258 49.7271V45.9655V42.2039L52.9288 41.907L52.632 41.6099H48.3871H44.1422L43.8454 41.907ZM40.6452 49.3531V55.1605H37.2581H33.871V49.3531V43.5457H37.2581H40.6452V49.3531ZM51.2903 45.9655V48.3852H48.3871H45.4839V45.9655V43.5457H48.3871H51.2903V45.9655ZM38.0389 47.7144C37.7594 47.994 37.7419 48.0898 37.7419 49.3531C37.7419 50.6165 37.7594 50.7123 38.0389 50.9919C38.226 51.1792 38.474 51.2889 38.7097 51.2889C38.9453 51.2889 39.1933 51.1792 39.3804 50.9919C39.66 50.7123 39.6774 50.6165 39.6774 49.3531C39.6774 48.0898 39.66 47.994 39.3804 47.7144C39.1933 47.5271 38.9453 47.4173 38.7097 47.4173C38.474 47.4173 38.226 47.5271 38.0389 47.7144ZM58.0645 57.5803V58.0642H30H1.93548V57.5803V57.0963H30H58.0645V57.5803Z"
        />
      </svg>
    );
  }
);
const MoneyInHand = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        viewBox="0 0 65 60"
        stroke="currentColor"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M15.0101 2.51326C9.9644 5.26058 9.49464 5.59342 9.2153 6.6198C9.00745 7.38374 9.14559 10.0463 9.47187 11.5661C10.2716 15.2913 12.3968 19.4361 14.9329 22.2166L15.5978 22.9457L15.2791 24.3887C14.5226 27.8151 14.5041 31.082 15.2216 34.4562C15.3636 35.1238 15.4886 35.7154 15.4993 35.7707C15.5101 35.8262 15.0299 36.0581 14.4322 36.2863C13.8345 36.5144 13.1619 36.8324 12.9377 36.9927L12.5299 37.2844L12.3943 36.9263C11.9058 35.6358 11.1868 34.8187 10.0437 34.255L9.2859 33.8813H6.233H3.1801L2.44512 34.2551C1.57771 34.6963 0.664768 35.6303 0.277178 36.4728C0.000127195 37.0753 0 37.0805 0 46.7222V56.3689L0.35261 57.0899C0.782051 57.968 1.61994 58.7686 2.58542 59.2233C3.30145 59.5604 3.33097 59.5631 6.233 59.5631C9.13503 59.5631 9.16454 59.5604 9.88058 59.2233C11.3097 58.5503 12.3331 57.2497 12.4917 55.9052C12.5377 55.5143 12.6207 55.2923 12.707 55.3282C12.7844 55.3604 14.65 56.201 16.8528 57.196C19.0555 58.1912 21.2594 59.1138 21.7501 59.2461C23.1056 59.6117 24.3986 59.7526 27.6033 59.8841C31.3802 60.0389 45.7713 60.0386 46.9595 59.8834C48.0613 59.7397 49.1387 59.374 49.8701 58.8956C50.3659 58.5714 62.3441 47.5477 63.653 46.2111C63.9627 45.8949 64.3925 45.2624 64.608 44.8056C64.9556 44.0693 65 43.8448 65 42.8252C65 41.7965 64.957 41.584 64.5924 40.8096C63.8877 39.313 62.556 38.2817 60.8353 37.8999C60.4331 37.8106 60.1039 37.7281 60.1039 37.7164C60.1039 37.7048 60.2491 37.2683 60.4264 36.7465C61.0891 34.7965 61.3924 32.9161 61.4661 30.3008C61.5584 27.0337 61.3015 25.0957 60.3998 22.2542C59.493 19.3961 57.3667 15.5913 56.465 15.2129C55.5973 14.8487 54.7613 15.4154 54.7613 16.3678C54.7613 16.7034 54.9693 17.1339 55.5948 18.0928C57.0173 20.2736 58.0204 22.7189 58.5992 25.4166C58.8372 26.5258 58.8811 27.1367 58.8858 29.4093C58.8923 32.4529 58.7377 33.5652 57.9804 35.925C57.4046 37.7185 57.0354 38.4478 56.514 38.8205C56.2846 38.9843 54.1221 40.9531 51.7085 43.1954C49.2948 45.4377 47.1196 47.3641 46.8747 47.4764C46.4844 47.6553 45.4084 47.6853 38.1612 47.7198C32.5215 47.7467 29.7443 47.7155 29.4254 47.6217C28.0879 47.2284 27.897 45.5021 29.1168 44.8311C29.4631 44.6406 30.1259 44.6062 34.5391 44.5501L39.5668 44.4862L40.4061 44.071C41.9408 43.3116 42.9263 41.8548 43.0046 40.2295C43.0431 39.433 43.067 39.3766 43.4701 39.1271C44.3459 38.5855 44.8523 38.1106 45.3462 37.3677C47.4946 34.1362 46.0898 29.8792 42.436 28.5481C41.8076 28.3192 41.2999 28.2789 38.1612 28.2093C34.1665 28.1205 34.2151 28.1312 33.3058 27.1405C31.8677 25.5731 32.2811 23.1744 34.1708 22.1231L34.8539 21.7431L40.3031 21.6792L45.7522 21.6153L46.0591 21.2568C46.4918 20.7512 46.4679 20.137 45.995 19.605L45.6239 19.1877L42.4968 19.1493L39.3697 19.1111V17.3188V15.5265L38.9978 15.1531C38.5787 14.7321 38.0503 14.6655 37.48 14.9617C36.9308 15.247 36.8256 15.65 36.8256 17.4688V19.1238H36.0797C32.918 19.1238 30.4256 21.1593 29.9333 24.1436C29.4205 27.2517 31.7573 30.3341 34.9408 30.7494C35.4527 30.8162 37.1053 30.8725 38.6133 30.8747C41.3044 30.8785 41.3671 30.8848 42.0161 31.2096C43.8761 32.1405 44.3856 34.5237 43.0681 36.1291C42.8673 36.3738 42.5045 36.6814 42.2619 36.8126L41.8208 37.0513L41.3266 36.654C41.0549 36.4354 40.5463 36.1247 40.1965 35.9634L39.5605 35.6701L28.8477 35.6353L18.1348 35.6006L18.0078 35.1242C17.211 32.1367 17.0595 29.0088 17.5668 26.0203C17.6797 25.3544 17.782 24.7985 17.7938 24.7848C17.8058 24.7711 18.2072 24.958 18.686 25.2C19.8582 25.7926 20.3864 25.7855 21.5512 25.1609C24.3189 23.677 26.9496 20.6188 28.8762 16.6454C29.8302 14.6778 30.3511 13.1541 30.7123 11.2747C30.8563 10.5248 30.9742 9.8874 30.9742 9.85802C30.9742 9.82876 31.4545 9.65754 32.0417 9.47777C36.3449 8.15931 41.0738 8.29679 45.2846 9.86262C47.276 10.6032 47.7142 10.6073 48.1502 9.88894C48.6512 9.06354 48.3286 8.31838 47.2688 7.85304C42.6929 5.84347 36.6312 5.44457 31.8551 6.83842L31.0187 7.08259L30.8629 6.49714C30.7601 6.11115 30.5428 5.7571 30.2256 5.45837C29.5975 4.86692 20.7561 0.0750212 20.1618 0.00385307C19.7767 -0.0421443 19.0818 0.29632 15.0101 2.51326ZM24.2176 4.95138C26.4296 6.15165 28.2917 7.18455 28.3558 7.2469C28.5282 7.41466 28.4489 9.58267 28.23 10.688C27.7388 13.1678 26.5123 16.0427 24.932 18.4186C24.0021 19.8168 22.042 21.8486 20.9363 22.5607L20.1205 23.086L19.501 22.7339C17.516 21.6061 15.1497 18.7474 13.6139 15.6214C12.4289 13.2096 11.8128 10.9695 11.6768 8.57776L11.6039 7.2952L15.7874 5.03277C18.0884 3.78841 20.0217 2.77008 20.0835 2.76983C20.1454 2.76944 22.0058 3.75123 24.2176 4.95138ZM21.4862 10.6865L19.493 12.7263L18.7144 12.0251C18.2861 11.6395 17.807 11.2903 17.6496 11.2492C16.8829 11.0487 16.0913 11.6621 16.0913 12.4567C16.0913 13.076 16.2704 13.3105 17.813 14.71C18.9258 15.7195 19.0573 15.8018 19.557 15.8018C20.0921 15.8018 20.121 15.7772 22.6073 13.2144C24.2204 11.5517 25.1554 10.4901 25.2235 10.2438C25.4674 9.36367 24.9312 8.64662 24.0294 8.64662C23.487 8.64662 23.4515 8.67512 21.4862 10.6865ZM51.1898 11.32C50.4241 12.0891 50.8386 13.3155 51.9132 13.4602C52.3663 13.5213 52.4924 13.4797 52.8641 13.1461C53.222 12.8248 53.2928 12.6729 53.2928 12.2242C53.2928 11.7796 53.2215 11.6232 52.8801 11.3168C52.3155 10.8099 51.6965 10.8111 51.1898 11.32ZM8.96534 36.5967C9.20881 36.7194 9.53802 37.0154 9.69677 37.2542L9.98552 37.6883L9.98501 46.7092C9.98463 55.5387 9.97916 55.739 9.72729 56.1539C9.56943 56.414 9.24634 56.6773 8.89131 56.835C8.36876 57.0671 8.09539 57.088 6.06445 57.0499C3.62137 57.004 3.34687 56.9325 2.79849 56.1984C2.55044 55.8663 2.54319 55.6316 2.51037 46.85C2.47832 38.2618 2.48786 37.8213 2.71453 37.395C2.84517 37.149 3.17514 36.8194 3.44774 36.6623C3.90987 36.3963 4.09813 36.3769 6.233 36.3751C8.16179 36.3734 8.59238 36.4084 8.96534 36.5967ZM39.3798 38.4585C40.7059 39.1629 40.7866 40.8473 39.5317 41.6309C39.0542 41.9293 39.0251 41.9312 34.0271 41.9947L29.0025 42.0586L28.2095 42.4266C26.6607 43.145 25.7227 44.5423 25.7119 46.1472C25.7011 47.7482 26.6351 49.1809 28.1569 49.8975L28.8753 50.2359L37.4214 50.2713C46.7924 50.3101 47.1748 50.2856 48.4048 49.5688C48.74 49.3734 51.0269 47.3451 53.4869 45.0612C55.9469 42.7773 58.1415 40.8113 58.3639 40.6922C59.3444 40.1672 60.715 40.3006 61.564 41.0036C62.086 41.4358 62.5135 42.2366 62.518 42.7907C62.5259 43.7675 62.3769 43.9267 55.3778 50.4229C51.204 54.2969 48.438 56.7713 48.095 56.9381C47.2006 57.373 45.7729 57.4531 38.988 57.4497C28.0279 57.444 23.4971 57.2164 21.8631 56.589C21.522 56.4582 19.2826 55.4674 16.8863 54.3874L12.5296 52.4237V46.5193V40.6149L13.21 39.9902C13.5842 39.6467 14.2626 39.1816 14.7175 38.9566C16.3185 38.1649 15.9993 38.1839 27.9331 38.1722L38.8208 38.1616L39.3798 38.4585Z"
        />
      </svg>
    );
  }
);
const BuyHouse = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        stroke="currentColor"
        viewBox="0 0 57 58"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M31.5305 0.160672C30.099 0.546536 30.0734 0.5692 21.8019 8.78919C16.787 13.7728 13.8985 16.7247 13.7443 17.0238C13.4272 17.6389 13.4058 18.7951 13.7011 19.3597C14.2123 20.337 15.0044 20.8378 16.1719 20.9218L16.935 20.9767V23.6164V26.256L17.2328 26.4908C17.6245 26.7997 17.981 26.7877 18.37 26.4524L18.6872 26.179L18.7201 22.911L18.753 19.643L25.7289 12.6494L32.7048 5.6557L39.7389 12.6796L46.773 19.7034L46.8042 25.5346L46.8354 31.3658L47.0835 31.6145C47.4136 31.9451 47.9448 31.9379 48.3059 31.5977L48.5877 31.3324V26.1582V20.984L49.2377 20.9815C50.0603 20.9783 50.597 20.7495 51.1693 20.1584C51.6697 19.6416 51.9796 18.8826 51.9779 18.178C51.9754 17.127 51.9276 17.0732 43.5406 8.69003C38.2317 3.38346 35.4876 0.718787 35.1669 0.558548C34.0415 -0.00341981 32.6883 -0.151533 31.5305 0.160672ZM42.7093 1.63512C42.1941 1.85847 41.6197 2.41636 41.3197 2.98456C41.146 3.31399 41.0792 3.64966 41.0753 4.21253C41.0708 4.89326 41.1025 5.0135 41.337 5.20411C41.6737 5.47767 42.1571 5.48186 42.4869 5.21408C42.6722 5.0637 42.7666 4.82413 42.8326 4.33605C42.9604 3.39275 43.1433 3.26787 44.3977 3.26787C45.9266 3.26787 45.8563 3.10106 45.8974 6.82066L45.9311 9.86054L46.2483 10.1339C46.6533 10.4829 47.0544 10.4813 47.4058 10.129L47.6833 9.85091V6.66903C47.6833 4.25548 47.6464 3.39921 47.5309 3.12259C47.2837 2.53139 46.7711 2.00738 46.1618 1.72294C45.6706 1.49358 45.4203 1.45743 44.3485 1.46026C43.4942 1.46252 42.9811 1.51726 42.7093 1.63512ZM34.3031 2.17997C34.7082 2.40095 37.0431 4.66911 42.5196 10.1612C49.4337 17.095 50.1703 17.8684 50.1703 18.1937C50.1703 18.7451 49.7377 19.1818 49.2066 19.1666C48.7966 19.1551 48.4722 18.8473 41.1941 11.563C37.0224 7.38761 33.498 3.91506 33.3623 3.84627C33.0451 3.68558 32.3645 3.68558 32.0473 3.84627C31.9115 3.91506 28.3818 7.39294 24.2036 11.5748C16.8751 18.9097 16.5922 19.1778 16.1984 19.1667C15.4872 19.1464 15.0528 18.4518 15.3733 17.847C15.6051 17.4091 30.7397 2.41886 31.1806 2.19028C31.8289 1.85417 32.1026 1.79909 32.9385 1.83604C33.5489 1.86301 33.8709 1.94415 34.3031 2.17997ZM28.7253 21.6278C27.7617 21.8268 26.9162 22.4948 26.4667 23.4123C26.18 23.9975 26.1442 24.2021 26.1081 25.4556C26.082 26.3628 26.115 26.962 26.2027 27.174C26.3618 27.5594 26.8409 27.7889 27.2639 27.6825C27.7962 27.5485 27.9004 27.2538 27.9006 25.8788C27.9007 24.4903 28.0438 24.0376 28.6152 23.6174C28.9226 23.3913 29.0702 23.3827 32.6283 23.3827C37.7142 23.3827 37.3962 23.1334 37.3962 27.1202V29.8029L37.7266 30.1341C38.1338 30.5423 38.4072 30.5515 38.8571 30.172L39.2049 29.8786V27.0758C39.2049 23.8867 39.1452 23.5629 38.401 22.7154C38.1513 22.431 37.6677 22.065 37.3073 21.8875L36.6614 21.5695L32.9309 21.5496C30.8791 21.5386 28.9865 21.5738 28.7253 21.6278ZM19.3654 28.152C18.2461 28.4016 17.4199 28.7585 16.0589 29.5801C13.9593 30.8475 11.3395 33.1556 10.8589 34.1612C10.7141 34.4644 10.7123 34.5598 10.8462 34.8401C10.932 35.0195 11.1351 35.23 11.2974 35.3081C11.7517 35.5264 12.1689 35.3124 12.8088 34.5333C14.0765 32.9897 16.882 30.907 18.64 30.2041C21.2621 29.156 24.1531 29.7123 26.5491 31.7261C27.6048 32.6133 28.765 33.2341 29.6962 33.41C30.0312 33.4733 31.7099 33.5262 33.4267 33.5276C36.2238 33.5298 36.5954 33.5518 37.0005 33.7399C38.2609 34.3249 38.7872 35.8548 38.1366 37.0424C37.9842 37.3205 37.7953 37.6877 37.7167 37.8583C37.4123 38.5189 37.145 38.5624 33.0055 38.6246L29.2366 38.6813L29.0206 38.9488C28.7109 39.3326 28.7515 39.7219 29.1421 40.1134L29.4795 40.4517L33.2399 40.4126C37.46 40.3688 37.498 40.3624 38.6137 39.518C39.1215 39.1338 39.47 38.9913 40.6986 38.6665C44.3989 37.688 47.2146 36.5765 49.7181 35.106C51.264 34.198 52.6954 34.0847 54.0671 34.7615C55.3726 35.4059 55.574 35.9795 54.7665 36.7551C53.4159 38.0523 49.2633 40.9163 46.2137 42.6537C42.1115 44.9906 39.5554 45.899 36.2092 46.2092C35.5253 46.2725 32.0406 46.4024 28.4656 46.4978C24.8905 46.5932 21.7634 46.6991 21.5162 46.733C21.2691 46.7668 20.9767 46.8767 20.8662 46.9768C20.5703 47.2453 20.6065 47.8681 20.9372 48.1998C21.1843 48.4475 21.2793 48.4675 21.9829 48.4193C22.4085 48.3902 25.6055 48.2906 29.0873 48.198C32.5691 48.1054 35.7231 48.0018 36.0961 47.9678C39.5064 47.657 41.9954 46.8747 45.3561 45.0576C48.4996 43.358 51.2873 41.5916 53.9008 39.6437C56.7285 37.5361 57.0056 37.1971 56.9999 35.8519C56.9958 34.8955 56.8255 34.5244 56.0944 33.8792C55.0616 32.9679 53.755 32.5087 52.1887 32.5065C50.9774 32.5048 49.9875 32.7884 48.8115 33.4739C46.7994 34.6466 43.8798 35.8524 41.2806 36.584C40.6148 36.7714 40.0662 36.9245 40.0614 36.9243C40.0566 36.9241 40.0521 36.4524 40.0513 35.8761C40.0501 34.9795 40.0063 34.7346 39.7474 34.1783C39.3617 33.3493 38.5389 32.5243 37.6763 32.1015L37.0005 31.7703L33.3831 31.7128L29.7656 31.6552L29.0308 31.3028C28.6267 31.1089 28.0671 30.7473 27.7873 30.4991C26.6248 29.4682 25.4459 28.8085 23.8824 28.3136C22.8255 27.9791 20.5118 27.8963 19.3654 28.152ZM6.24168 35.7881C5.42708 35.9622 4.83268 36.3279 2.40865 38.1466C0.303977 39.7258 0.030859 39.9674 0.000788989 40.2761C-0.0289419 40.5813 0.758079 41.6801 6.37338 49.1719C9.89689 53.8731 12.8597 57.7833 12.9572 57.8612C13.3655 58.1871 13.715 58.0207 15.8744 56.4723C17.0484 55.6304 18.2506 54.7059 18.5459 54.4178C19.7255 53.2674 20.1961 51.3775 19.6587 49.9493C19.4864 49.4917 18.1498 47.6182 14.7896 43.1248C9.94674 36.6488 9.69035 36.3534 8.56962 35.9602C7.93612 35.7378 6.85201 35.6577 6.24168 35.7881ZM7.83483 37.5049C8.08353 37.5739 8.436 37.7366 8.61823 37.8665C8.99998 38.1386 17.5357 49.5345 17.9217 50.2877C18.2715 50.97 18.2547 51.6026 17.8676 52.3222C17.6041 52.8122 17.2687 53.1161 15.6654 54.3182C14.6251 55.0982 13.729 55.7364 13.674 55.7364C13.5697 55.7364 2.39418 40.906 2.28645 40.6248C2.24485 40.5162 2.83834 40.0144 4.12559 39.07C6.46291 37.355 6.79323 37.2157 7.83483 37.5049Z"
        />
      </svg>
    );
  }
);
const RentHouse = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        stroke="currentColor"
        viewBox="0 0 48 44"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M16.3705 4.22311C11.5713 7.36749 9.8982 8.50972 9.82041 8.69477C9.62532 9.15871 10.1144 9.71702 10.5867 9.5694C10.687 9.53806 13.5218 7.71486 16.8864 5.51794C20.2511 3.32093 23.0588 1.49052 23.1259 1.45031C23.3014 1.34522 44.8484 15.4581 44.9945 15.774C45.1464 16.1023 45.1288 16.4754 44.9495 16.7274C44.7543 17.002 44.2596 17.2071 43.9679 17.1345C43.8435 17.1036 39.2335 14.1265 33.7233 10.5187C25.235 4.96102 23.6438 3.95236 23.3061 3.91483C22.9117 3.87102 22.807 3.93646 12.9152 10.4102C7.4193 14.007 2.79603 17.0024 2.6412 17.0667C2.25356 17.2277 1.88506 17.137 1.60796 16.8127C1.34221 16.5015 1.29736 15.9681 1.51337 15.6871C1.58656 15.5919 2.94702 14.6559 4.53671 13.6073C7.64826 11.5545 7.76209 11.4506 7.46781 10.9316C7.35981 10.7412 7.24345 10.6769 6.96597 10.6543C6.63398 10.6272 6.38418 10.7692 3.87507 12.4106C2.37367 13.3927 0.982628 14.339 0.783881 14.5135C-0.807693 15.9103 0.186137 18.4963 2.31277 18.4916C2.95518 18.4902 3.32762 18.3265 4.59752 17.4872C5.14384 17.1261 5.61331 16.8307 5.6409 16.8307C5.66839 16.8307 5.69091 22.0302 5.69091 28.3851V39.9396H4.30043C2.62731 39.9396 2.13673 40.0539 1.63536 40.5607C0.827421 41.3775 0.779564 42.4881 1.51581 43.3354C2.15691 44.0732 0.160707 44.0139 23.3946 43.9857L44.148 43.9605L44.5549 43.6827C45.0737 43.3284 45.4787 42.5793 45.4758 41.9797C45.4716 41.1216 44.7779 40.2521 43.9295 40.0416C43.7032 39.9855 42.9034 39.9396 42.152 39.9396H40.786V38.1958C40.786 36.5716 40.7727 36.4353 40.5915 36.2084C40.3567 35.9143 39.9666 35.8867 39.6469 36.1414C39.4297 36.3144 39.4248 36.3534 39.3964 38.1288L39.3673 39.9396H36.1356H32.9037V37.4438V34.9481H39.7568C45.3005 34.9481 46.6679 34.9242 46.9134 34.8232C47.3112 34.6595 47.7892 34.1151 47.9185 33.6786C47.9903 33.4363 48.013 31.406 47.9931 26.9986L47.9646 20.6668L47.7419 20.3139C47.6195 20.1198 47.3481 19.8494 47.1389 19.7131L46.7585 19.4651L39.8441 19.4397L32.9297 19.4143L32.8829 18.3767C32.8254 17.1023 32.6132 16.5391 31.9855 15.9949C31.5518 15.6188 30.8614 15.3517 30.3232 15.3517C29.7849 15.3517 29.0946 15.6188 28.6609 15.9949C28.0332 16.5391 27.821 17.1023 27.7635 18.3767L27.7167 19.4143L20.8023 19.4397L13.8879 19.4651L13.5075 19.7131C13.2983 19.8494 13.0269 20.1198 12.9045 20.3139L12.6818 20.6668L12.6533 26.9986C12.6334 31.406 12.6561 33.4363 12.7279 33.6786C12.8369 34.0468 13.2777 34.6023 13.6096 34.7898C13.7299 34.8577 14.3801 34.9201 15.2623 34.9481L16.7168 34.9943L16.7417 37.4669L16.7668 39.9396H11.9326H7.09847V27.8878V15.8361L15.1673 10.5602L23.2363 5.28445L31.3074 10.5669L39.3785 15.8493V16.8441C39.3785 17.3911 39.4261 17.9419 39.4845 18.0679C39.6308 18.3842 40.0264 18.5367 40.3381 18.3968C40.6561 18.2541 40.786 17.946 40.786 17.3347C40.786 17.0575 40.8062 16.8307 40.8308 16.8307C40.8554 16.8307 41.3804 17.1593 41.9976 17.561C43.2997 18.4085 43.6111 18.5294 44.3546 18.4764C45.7981 18.3736 46.7831 16.9709 46.3772 15.5958C46.2922 15.3076 46.0886 14.9232 45.9211 14.7347C45.7436 14.5348 41.1049 11.4371 34.6866 7.23226C24.3466 0.458297 23.7292 0.0685873 23.2854 0.035218L22.8162 0L16.3705 4.22311ZM22.4878 8.33594C20.0718 8.74691 18.448 11.2095 19.062 13.5314C19.4452 14.9807 20.4695 16.076 21.8927 16.5584C22.5707 16.7882 23.8579 16.8026 24.4987 16.5875C26.1159 16.0447 27.2323 14.7519 27.4878 13.126C27.8072 11.0932 26.4737 9.03438 24.4671 8.46248C23.8418 8.28427 23.0785 8.23546 22.4878 8.33594ZM22.5816 10.7761V11.8392H21.4543H20.327L20.4734 11.4925C20.7888 10.7455 21.2559 10.2583 22.0162 9.88359C22.5802 9.60554 22.5816 9.60776 22.5816 10.7761ZM24.5318 9.93785C25.2436 10.2991 25.8641 10.9901 26.0112 11.585L26.074 11.8392H24.9846H23.8953V10.7761C23.8953 10.1063 23.9312 9.71313 23.9923 9.71313C24.0457 9.71313 24.2884 9.81426 24.5318 9.93785ZM22.5816 14.2949C22.5816 15.3605 22.5809 15.3639 22.3705 15.3022C21.525 15.0537 20.4234 13.9328 20.4234 13.3211C20.4234 13.261 20.8232 13.2257 21.5025 13.2257H22.5816V14.2949ZM26.0536 13.3068C26.0536 13.7455 25.3235 14.6721 24.7008 15.0237C23.8745 15.4903 23.8953 15.509 23.8953 14.2949V13.2257H24.9745C25.568 13.2257 26.0536 13.2622 26.0536 13.3068ZM30.9693 16.9312C31.3937 17.2601 31.4962 17.5723 31.4962 18.5361V19.4189H30.3232H29.1502V18.5361C29.1502 17.5723 29.2527 17.2601 29.6771 16.9312C29.8406 16.8046 30.0627 16.7382 30.3232 16.7382C30.5837 16.7382 30.8058 16.8046 30.9693 16.9312ZM46.4913 20.9163C46.5766 21.0004 46.6039 22.5212 46.6039 27.1954C46.6039 32.6795 46.5876 33.3795 46.4565 33.5087C46.3236 33.6396 44.7307 33.654 30.3232 33.654C15.9157 33.654 14.3228 33.6396 14.1898 33.5087C14.0588 33.3795 14.0424 32.6795 14.0424 27.1954C14.0424 22.5212 14.0697 21.0004 14.155 20.9163C14.3188 20.755 46.3276 20.755 46.4913 20.9163ZM19.4043 23.7504C19.2068 23.945 19.2035 24.0008 19.2035 27.1835C19.2035 30.2955 19.2106 30.4257 19.3911 30.6036C19.6157 30.8248 20.0213 30.8428 20.3086 30.6445C20.5078 30.5072 20.5172 30.4404 20.5172 29.1656V27.8305H20.9305H21.3437L22.1269 29.2864C22.8824 30.6908 22.9212 30.7433 23.2252 30.772C23.5859 30.8059 23.9892 30.5072 23.9892 30.206C23.9892 30.047 23.343 28.7725 22.8484 27.9558L22.6723 27.6651L23.0737 27.4333C24.1018 26.8398 24.3007 25.087 23.4366 24.2358C22.9667 23.773 22.56 23.669 20.9761 23.6066C19.6626 23.5548 19.5967 23.5608 19.4043 23.7504ZM25.3967 23.6981L25.1621 23.8149L25.1374 27.1861C25.1147 30.2734 25.126 30.5671 25.2726 30.6729C25.3885 30.7566 25.9697 30.7885 27.3786 30.7885C29.0225 30.7885 29.3474 30.7659 29.472 30.6432C29.6411 30.4766 29.664 30.1189 29.5223 29.858C29.4325 29.6927 29.3121 29.6792 27.9271 29.6792H26.4289V28.7087V27.7381H27.1587C28.006 27.7381 28.3057 27.5967 28.3057 27.1967C28.3057 26.7891 28.1557 26.7213 27.2547 26.7213H26.4289V25.7507V24.7801H27.8365C29.119 24.7801 29.2608 24.7637 29.4317 24.5953C29.535 24.4936 29.6194 24.3064 29.6194 24.1793C29.6194 24.0522 29.535 23.865 29.4317 23.7633C29.2569 23.5911 29.12 23.5786 27.4377 23.5799C26.1702 23.5808 25.5613 23.6161 25.3967 23.6981ZM30.988 23.6817C30.8376 23.7223 30.68 23.8093 30.6376 23.875C30.5953 23.9406 30.56 25.4399 30.5592 27.2066C30.5579 30.2964 30.5649 30.4257 30.7455 30.6036C30.9769 30.8316 31.4094 30.8423 31.6734 30.6267C31.8621 30.4726 31.8725 30.3719 31.895 28.4934L31.9184 26.5218L33.0312 28.5688C34.1807 30.6834 34.2661 30.7885 34.8335 30.7885C34.9591 30.7885 35.1464 30.7053 35.2496 30.6036C35.4301 30.4258 35.4373 30.2955 35.4373 27.2011C35.4373 24.7324 35.4094 23.9459 35.3172 23.8217C35.174 23.6289 34.4771 23.5895 34.2657 23.7623C34.153 23.8544 34.1225 24.2473 34.1019 25.8761L34.0767 27.8767L33.0974 26.0122C32.5588 24.9866 32.0519 24.0612 31.971 23.9555C31.7835 23.7107 31.3395 23.587 30.988 23.6817ZM36.6572 23.6459C36.4449 23.7255 36.3787 23.8672 36.3771 24.2454C36.3752 24.6941 36.5476 24.7801 37.4486 24.7801H38.1586V27.5994C38.1586 30.2955 38.1668 30.4268 38.3463 30.6036C38.5503 30.8045 38.9985 30.8469 39.2908 30.6928C39.4643 30.6013 39.4723 30.4696 39.4723 27.6886V24.7801H40.2554C40.8949 24.7801 41.067 24.7492 41.1938 24.6111C41.4044 24.3818 41.3894 23.988 41.1614 23.7633C40.9845 23.5891 40.854 23.5789 38.8858 23.5858C37.7375 23.5898 36.7346 23.6168 36.6572 23.6459ZM22.3309 24.969C22.6081 25.1838 22.7268 25.6368 22.6339 26.1249C22.5393 26.6215 22.1531 26.813 21.2444 26.8134L20.5172 26.8137V25.7969V24.7801H21.3021C21.9506 24.7801 22.1295 24.813 22.3309 24.969ZM27.7427 37.4438V39.9396H22.91H18.0774V37.5055C18.0774 36.1666 18.1056 35.0435 18.14 35.0097C18.1744 34.9758 20.349 34.9481 22.9726 34.9481H27.7427V37.4438ZM31.4737 38.8535L31.4982 42.7127H30.3242H29.1502V38.892C29.1502 36.7906 29.1797 35.0423 29.2156 35.0069C29.2516 34.9714 29.7688 34.9542 30.3651 34.9684L31.4492 34.9943L31.4737 38.8535ZM27.7427 42.0204V42.7147L15.2722 42.6906C3.15899 42.6671 2.79594 42.6614 2.60414 42.4903C2.34636 42.2605 2.34139 41.7601 2.59428 41.511C2.78008 41.328 2.90704 41.3261 15.2623 41.3261H27.7427V42.0204ZM43.8649 41.5146C44.1357 41.7631 44.1397 42.2524 43.8729 42.4903C43.6842 42.6586 43.4345 42.6675 38.2896 42.6918L32.9037 42.7171V42.0216V41.3261H38.2816C43.5642 41.3261 43.6633 41.3294 43.8649 41.5146Z"
        />
      </svg>
    );
  }
);
const SellHouse = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        stroke="currentColor"
        viewBox="0 0 61 44"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M26.5883 5.36451L17.3733 10.722H10.1327C5.77594 10.722 2.63645 10.7703 2.25018 10.8434C1.3809 11.0078 0.739894 11.4864 0.332774 12.2748L0 12.9194V21.3304V29.7415L0.332774 30.386C0.739894 31.1744 1.3809 31.653 2.25018 31.8175C2.6243 31.8882 5.27053 31.9389 8.59469 31.9389H14.2975V37.0622V42.1856H7.39168H0.485876L0.242938 42.4495C-0.201356 42.932 -0.00786361 43.6183 0.643029 43.8686C1.0984 44.0438 59.9042 44.0438 60.3595 43.8686C61.0104 43.6183 61.2039 42.932 60.7596 42.4495C60.5234 42.1929 60.4419 42.1856 57.781 42.1856H55.0453V30.1306C55.0453 23.5003 55.0678 18.0756 55.0954 18.0756C55.123 18.0756 55.6563 18.3739 56.2806 18.7386C57.5794 19.4973 57.9977 19.5664 58.3727 19.084C58.6068 18.7828 58.6197 18.6172 58.6197 15.9028C58.6197 13.3506 58.597 13.0121 58.4111 12.7906C58.2965 12.6541 56.9427 11.8142 55.4027 10.9243C53.8628 10.0345 48.9927 7.21098 44.5804 4.64976C38.505 1.12331 36.4663 -0.00528562 36.1806 1.85932e-05C35.9082 0.00508171 33.2387 1.4981 26.5883 5.36451ZM46.528 7.87195L56.7729 13.8222L56.8061 15.3974L56.8393 16.9728L51.385 13.8085C48.385 12.0681 43.8125 9.41391 41.2237 7.91041C38.4243 6.28455 36.3922 5.17669 36.2095 5.17669C36.0269 5.17669 33.9229 6.32421 31.0156 8.00962L26.1288 10.8426H23.5294C22.0996 10.8426 20.9682 10.8018 21.0149 10.7521C21.1493 10.6092 36.0277 1.94775 36.1624 1.93413C36.2289 1.92738 40.8934 4.59937 46.528 7.87195ZM44.7392 12.0282L53.1985 16.9437V29.5346V42.1254H48.1944H43.1903L43.1597 34.2072L43.1291 26.2891L42.8159 26.04C42.5149 25.8003 42.3621 25.7908 38.8254 25.7908H35.148V19.3551V12.9194L34.8152 12.2748C34.6076 11.873 34.2899 11.4933 33.9714 11.2665C33.4696 10.9093 33.4282 10.9017 31.6532 10.8426L29.846 10.7823L33.0033 8.94726C34.7399 7.93801 36.1875 7.11237 36.2203 7.11237C36.253 7.11249 40.0865 9.32458 44.7392 12.0282ZM33.1178 12.9147C33.3574 13.1748 33.3608 13.2906 33.357 21.3231C33.3528 30.2479 33.3908 29.7939 32.6303 30.0146C32.0894 30.1716 3.05859 30.1716 2.51767 30.0146C1.75716 29.7939 1.79517 30.2479 1.791 21.3231C1.78718 13.2906 1.79052 13.1748 2.03012 12.9147L2.27306 12.6508H17.574H32.8749L33.1178 12.9147ZM6.39633 17.2338C4.47725 17.8166 4.1415 20.7751 5.87162 21.8572C6.33748 22.1487 6.60424 22.218 7.50915 22.2828C8.66332 22.3654 8.81153 22.4501 8.81499 23.0296C8.81845 23.6374 8.53333 23.7414 6.8635 23.7414C6.02877 23.7414 5.24777 23.7946 5.12791 23.8595C4.55863 24.1677 4.66753 25.3391 5.27994 25.4946C5.43983 25.5352 6.31448 25.5507 7.22356 25.529C9.14598 25.483 9.59373 25.3235 10.187 24.4738C10.5106 24.0103 10.5444 23.8725 10.5444 23.0181C10.5444 22.1642 10.5104 22.0258 10.187 21.561C9.65413 20.7955 8.98584 20.4866 7.86337 20.4866C6.91188 20.4866 6.70266 20.3872 6.51202 19.845C6.43208 19.6179 6.60901 19.167 6.83896 19.0116C6.91104 18.9629 7.67036 18.9223 8.52618 18.9212C9.92626 18.9197 10.1087 18.8947 10.3432 18.6736C10.5133 18.5133 10.604 18.2845 10.604 18.0153C10.604 17.7461 10.5133 17.5173 10.3432 17.357C10.1052 17.1326 9.93639 17.112 8.40703 17.1215C7.48568 17.1272 6.58077 17.1777 6.39633 17.2338ZM13.7239 17.3221C13.572 17.4543 13.0052 18.8673 12.2073 21.1034C11.0073 24.4661 10.9427 24.6938 11.0965 25.0185C11.3144 25.4787 11.8276 25.6613 12.2385 25.4252C12.5768 25.2308 12.6647 25.1049 12.9302 24.4346L13.1092 23.9825H14.2829H15.4565L15.6642 24.5551C16.0176 25.5296 16.5733 25.799 17.2005 25.2998C17.399 25.1419 17.5144 24.9321 17.5144 24.7297C17.5144 24.5535 16.9743 22.8894 16.3141 21.0315C15.0687 17.5265 14.8495 17.1112 14.2445 17.1112C14.0916 17.1112 13.8574 17.206 13.7239 17.3221ZM18.1643 17.4071L17.8718 17.7029V21.3304V24.9579L18.1643 25.2537C18.4552 25.5481 18.4691 25.5497 20.829 25.5497C23.0486 25.5497 23.2215 25.5337 23.5152 25.2998C23.9493 24.9543 23.9493 24.3368 23.5152 23.9913C23.2296 23.764 23.0416 23.7414 21.4301 23.7414H19.659V20.6762V17.6109L19.3451 17.3611C18.9287 17.0296 18.5217 17.0455 18.1643 17.4071ZM24.803 17.3901C24.5488 17.664 24.544 17.7368 24.544 21.3473V25.0254L24.8197 25.2876C25.0842 25.5388 25.1933 25.5496 27.4707 25.5458C30.0047 25.5417 30.1473 25.5115 30.3651 24.9319C30.4994 24.5747 30.2723 23.9377 29.9686 23.8198C29.8577 23.7766 28.9939 23.7414 28.049 23.7414H26.3312V23.0292V22.3169L28.1153 22.2758C29.7642 22.2377 29.9191 22.2145 30.1606 21.9701C30.4814 21.6452 30.5022 21.0617 30.2048 20.7292C30.0053 20.5061 29.8404 20.4866 28.1595 20.4866H26.3312V19.703V18.9194L28.0886 18.9156C29.9627 18.9115 30.1555 18.8595 30.3651 18.3016C30.4994 17.9444 30.2723 17.3074 29.9686 17.1895C29.8577 17.1464 28.7084 17.1112 27.4146 17.1112C25.1096 17.1112 25.0569 17.1168 24.803 17.3901ZM14.5795 21.5026C14.6865 21.8294 14.7741 22.1141 14.7741 22.1355C14.7741 22.1568 14.5596 22.1743 14.2975 22.1743C14.0354 22.1743 13.8209 22.1384 13.8209 22.0945C13.8209 21.8394 14.2365 20.7399 14.3039 20.8165C14.3485 20.8672 14.4725 21.1759 14.5795 21.5026ZM41.3435 34.8923V42.1856H36.2203H31.097V37.0622V31.9389H31.6765C33.2876 31.9389 34.2624 31.4567 34.8152 30.386C35.1067 29.8213 35.148 29.6086 35.148 28.6703V27.599H38.2457H41.3435V34.8923ZM19.0633 37.0622V42.1856H17.574H16.0847V37.0622V31.9389H17.574H19.0633V37.0622ZM29.2813 37.0321L29.2503 42.1254L25.0504 42.1571L20.8505 42.1888V37.0638V31.9389H25.0815H29.3124L29.2813 37.0321ZM39.0363 33.5148C38.739 33.7513 38.7223 33.8217 38.7223 34.8409C38.7223 36.086 38.8982 36.3992 39.5975 36.3992C40.189 36.3992 40.4298 36.0582 40.4876 35.1385C40.547 34.194 40.3642 33.5876 39.9643 33.4032C39.5459 33.2103 39.3962 33.2283 39.0363 33.5148Z"
        />
      </svg>
    );
  }
);
const Squares = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        stroke="currentColor"
        viewBox="0 0 13 13"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M0.707599 5.26346C0.574193 5.26346 0.446251 5.21047 0.351918 5.11614C0.257585 5.0218 0.20459 4.89386 0.20459 4.76045V0.737384C0.20459 0.603978 0.257585 0.476036 0.351918 0.381703C0.446251 0.287371 0.574193 0.234375 0.707599 0.234375H4.73167C4.86508 0.234375 4.99302 0.287371 5.08736 0.381703C5.18169 0.476036 5.23468 0.603978 5.23468 0.737384V4.76045C5.23468 4.89386 5.18169 5.0218 5.08736 5.11614C4.99302 5.21047 4.86508 5.26346 4.73167 5.26346H0.707599ZM7.74973 5.26346C7.61632 5.26346 7.48838 5.21047 7.39405 5.11614C7.29972 5.0218 7.24672 4.89386 7.24672 4.76045V0.737384C7.24672 0.603978 7.29972 0.476036 7.39405 0.381703C7.48838 0.287371 7.61632 0.234375 7.74973 0.234375H11.7728C11.9062 0.234375 12.0342 0.287371 12.1285 0.381703C12.2228 0.476036 12.2758 0.603978 12.2758 0.737384V4.76045C12.2758 4.89386 12.2228 5.0218 12.1285 5.11614C12.0342 5.21047 11.9062 5.26346 11.7728 5.26346H7.74973ZM0.707599 12.3056C0.574193 12.3056 0.446251 12.2526 0.351918 12.1583C0.257585 12.0639 0.20459 11.936 0.20459 11.8026V7.77851C0.20459 7.6451 0.257585 7.51716 0.351918 7.42283C0.446251 7.3285 0.574193 7.2755 0.707599 7.2755H4.73167C4.86508 7.2755 4.99302 7.3285 5.08736 7.42283C5.18169 7.51716 5.23468 7.6451 5.23468 7.77851V11.8026C5.23468 11.936 5.18169 12.0639 5.08736 12.1583C4.99302 12.2526 4.86508 12.3056 4.73167 12.3056H0.707599ZM7.74973 12.3056C7.61632 12.3056 7.48838 12.2526 7.39405 12.1583C7.29972 12.0639 7.24672 11.936 7.24672 11.8026V7.77851C7.24672 7.6451 7.29972 7.51716 7.39405 7.42283C7.48838 7.3285 7.61632 7.2755 7.74973 7.2755H11.7728C11.9062 7.2755 12.0342 7.3285 12.1285 7.42283C12.2228 7.51716 12.2758 7.6451 12.2758 7.77851V11.8026C12.2758 11.936 12.2228 12.0639 12.1285 12.1583C12.0342 12.2526 11.9062 12.3056 11.7728 12.3056H7.74973Z" />
      </svg>
    );
  }
);
const Bed = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        stroke="currentColor"
        viewBox="0 0 17 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_1_5698)">
          <path d="M4.61911 8.48631C5.7285 8.48631 6.63115 7.358 6.63115 5.97126C6.63115 4.58453 5.7285 3.45621 4.61911 3.45621C3.50972 3.45621 2.60707 4.58453 2.60707 5.97126C2.60707 7.358 3.50972 8.48631 4.61911 8.48631ZM13.4721 4.46223H7.83837C7.61604 4.46223 7.43596 4.68733 7.43596 4.96524V9.49233H1.80226V2.9532C1.80226 2.67529 1.62218 2.4502 1.39985 2.4502H0.595035C0.372704 2.4502 0.192627 2.67529 0.192627 2.9532V14.0194C0.192627 14.2973 0.372704 14.5224 0.595035 14.5224H1.39985C1.62218 14.5224 1.80226 14.2973 1.80226 14.0194V12.5104H14.6793V14.0194C14.6793 14.2973 14.8594 14.5224 15.0817 14.5224H15.8865C16.1089 14.5224 16.2889 14.2973 16.2889 14.0194V7.9833C16.2889 6.03854 15.0279 4.46223 13.4721 4.46223Z" />
        </g>
        <defs>
          <clipPath id="clip0_1_5698">
            <rect
              width="16.0963"
              height="16.0963"
              fill="white"
              transform="translate(0.192627 0.437988)"
            />
          </clipPath>
        </defs>
      </svg>
    );
  }
);
const Bath = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        stroke="currentColor"
        viewBox="0 0 17 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_1_5702)">
          <path d="M1.45646 12.5102C1.45732 12.9325 1.54739 13.3499 1.72075 13.7351C1.89412 14.1202 2.14688 14.4644 2.46248 14.7451V16.0312C2.46248 16.1646 2.51547 16.2926 2.60981 16.3869C2.70414 16.4812 2.83208 16.5342 2.96549 16.5342H3.97151C4.10491 16.5342 4.23285 16.4812 4.32719 16.3869C4.42152 16.2926 4.47451 16.1646 4.47451 16.0312V15.5282H12.5227V16.0312C12.5227 16.1646 12.5757 16.2926 12.67 16.3869C12.7643 16.4812 12.8923 16.5342 13.0257 16.5342H14.0317C14.1651 16.5342 14.293 16.4812 14.3874 16.3869C14.4817 16.2926 14.5347 16.1646 14.5347 16.0312V14.7451C14.8503 14.4644 15.1031 14.1202 15.2764 13.7351C15.4498 13.3499 15.5399 12.9325 15.5407 12.5102V11.0011H1.45646V12.5102ZM16.0437 8.48608H2.96549V2.61501C2.96577 2.48299 3.00515 2.35402 3.07865 2.24435C3.15215 2.13468 3.25648 2.04924 3.37849 1.9988C3.50049 1.94836 3.6347 1.93518 3.76418 1.96092C3.89367 1.98666 4.01263 2.05017 4.10606 2.14344L4.71187 2.74894C4.29909 3.68831 4.47263 4.60724 4.98287 5.2555L4.97752 5.26084C4.88355 5.35513 4.83078 5.48282 4.83078 5.61594C4.83078 5.74905 4.88355 5.87674 4.97752 5.97103L5.33309 6.32659C5.3798 6.37331 5.43526 6.41038 5.49629 6.43566C5.55733 6.46095 5.62275 6.47396 5.68881 6.47396C5.75488 6.47396 5.8203 6.46095 5.88133 6.43566C5.94237 6.41038 5.99782 6.37331 6.04453 6.32659L9.35716 3.01396C9.40389 2.96725 9.44095 2.9118 9.46623 2.85076C9.49152 2.78972 9.50453 2.72431 9.50453 2.65824C9.50453 2.59217 9.49152 2.52676 9.46623 2.46572C9.44095 2.40468 9.40389 2.34923 9.35716 2.30252L9.0016 1.94695C8.90728 1.85269 8.77938 1.79974 8.64604 1.79974C8.51269 1.79974 8.38479 1.85269 8.29047 1.94695L8.28513 1.9523C7.63687 1.44206 6.71857 1.26852 5.77857 1.6813L5.17307 1.07549C4.8686 0.770982 4.48066 0.563605 4.05832 0.479587C3.63599 0.395569 3.19822 0.438683 2.80039 0.603476C2.40255 0.76827 2.06253 1.04734 1.82331 1.40539C1.58409 1.76345 1.45642 2.1844 1.45646 2.61501V8.48608H0.953449C0.820042 8.48608 0.6921 8.53907 0.597768 8.6334C0.503435 8.72774 0.450439 8.85568 0.450439 8.98909L0.450439 9.49209C0.450439 9.6255 0.503435 9.75344 0.597768 9.84778C0.6921 9.94211 0.820042 9.9951 0.953449 9.9951H16.0437C16.1771 9.9951 16.3051 9.94211 16.3994 9.84778C16.4937 9.75344 16.5467 9.6255 16.5467 9.49209V8.98909C16.5467 8.85568 16.4937 8.72774 16.3994 8.6334C16.3051 8.53907 16.1771 8.48608 16.0437 8.48608Z" />
        </g>
        <defs>
          <clipPath id="clip0_1_5702">
            <rect
              width="16.0963"
              height="16.0963"
              fill="white"
              transform="translate(0.450439 0.437988)"
            />
          </clipPath>
        </defs>
      </svg>
    );
  }
);
const Time = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        stroke="currentColor"
        viewBox="0 0 18 18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M9.0017 2.17578C5.07244 2.17578 1.87573 5.37249 1.87573 9.30175C1.87573 13.231 5.07244 16.4277 9.0017 16.4277C12.931 16.4277 16.1277 13.231 16.1277 9.30175C16.1277 5.37249 12.931 2.17578 9.0017 2.17578ZM9.0017 15.0025C5.85844 15.0025 3.30093 12.445 3.30093 9.30175C3.30093 6.15848 5.85844 3.60097 9.0017 3.60097C12.145 3.60097 14.7025 6.15848 14.7025 9.30175C14.7025 12.445 12.145 15.0025 9.0017 15.0025Z" />
        <path
          d="M9.7145 5.73828H8.28931V9.59628L10.6359 11.9429L11.6435 10.9352L9.7145 9.00625V5.73828Z"
          fill="#FC8438"
        />
      </svg>
    );
  }
);
const Info = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        stroke="currenColor"
        viewBox="0 0 17 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M7.54689 7.54683L7.57439 7.53341C7.66041 7.49044 7.75695 7.47301 7.85256 7.4832C7.94818 7.49339 8.03887 7.53077 8.1139 7.59091C8.18894 7.65105 8.24516 7.73143 8.27593 7.82253C8.30669 7.91363 8.3107 8.01165 8.28749 8.10496L7.81254 10.0074C7.78916 10.1008 7.79304 10.1989 7.82373 10.2901C7.85443 10.3813 7.91064 10.4618 7.9857 10.5221C8.06077 10.5823 8.15153 10.6198 8.24723 10.63C8.34293 10.6402 8.43955 10.6227 8.52563 10.5797L8.55314 10.5656M14.0875 8.04995C14.0875 8.84281 13.9313 9.6279 13.6279 10.3604C13.3245 11.0929 12.8798 11.7585 12.3192 12.3191C11.7585 12.8797 11.093 13.3245 10.3605 13.6279C9.62796 13.9313 8.84287 14.0875 8.05001 14.0875C7.25716 14.0875 6.47206 13.9313 5.73956 13.6279C5.00706 13.3245 4.34149 12.8797 3.78085 12.3191C3.22022 11.7585 2.7755 11.0929 2.47209 10.3604C2.16868 9.6279 2.01251 8.84281 2.01251 8.04995C2.01251 6.44871 2.6486 4.91304 3.78085 3.78079C4.91311 2.64854 6.44877 2.01245 8.05001 2.01245C9.65126 2.01245 11.1869 2.64854 12.3192 3.78079C13.4514 4.91304 14.0875 6.44871 14.0875 8.04995ZM8.05001 5.53433H8.05538V5.53969H8.05001V5.53433Z"
          stroke="#FC8438"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
      </svg>
    );
  }
);
const People = forwardRef<HTMLButtonElement, iconsComponent>(
  ({ className, ...props }, ref) => {
    return (
      <svg
        className={className}
        fill="currentColor"
        viewBox="0 0 49 49"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M31.0625 31.5C32.753 31.5 34.125 32.872 34.125 34.5625V38.066L34.111 38.255C33.5685 41.9773 30.226 43.7658 24.6173 43.7658C19.0295 43.7658 15.6327 41.9982 14.8995 38.3197L14.875 38.0625V34.5625C14.875 32.872 16.247 31.5 17.9375 31.5H31.0625ZM31.927 21H42.4375C44.128 21 45.5 22.372 45.5 24.0625V27.566L45.486 27.755C44.9435 31.4772 41.601 33.2658 35.9922 33.2658L35.6982 33.2622C35.4285 32.3032 34.8679 31.4513 34.0937 30.8242C33.3196 30.197 32.37 29.8254 31.3758 29.7605L31.0625 29.75H29.449C30.3635 29.0126 31.101 28.0797 31.6074 27.0197C32.1137 25.9597 32.376 24.7997 32.375 23.625C32.375 22.7045 32.2175 21.8225 31.927 21ZM6.5625 21H17.073C16.7825 21.8225 16.625 22.7045 16.625 23.625C16.625 25.9525 17.6365 28.0473 19.243 29.4875L19.551 29.75H17.9375C15.729 29.75 13.867 31.2375 13.3 33.2675L13.2422 33.2658C7.6545 33.2658 4.25775 31.4983 3.5245 27.8197L3.5 27.5625V24.0625C3.5 22.372 4.872 21 6.5625 21ZM24.5 17.5C26.1245 17.5 27.6824 18.1453 28.831 19.294C29.9797 20.4426 30.625 22.0005 30.625 23.625C30.625 25.2495 29.9797 26.8074 28.831 27.956C27.6824 29.1047 26.1245 29.75 24.5 29.75C22.8755 29.75 21.3176 29.1047 20.169 27.956C19.0203 26.8074 18.375 25.2495 18.375 23.625C18.375 22.0005 19.0203 20.4426 20.169 19.294C21.3176 18.1453 22.8755 17.5 24.5 17.5ZM35.875 7C37.4995 7 39.0574 7.64531 40.206 8.79397C41.3547 9.94263 42 11.5005 42 13.125C42 14.7495 41.3547 16.3074 40.206 17.456C39.0574 18.6047 37.4995 19.25 35.875 19.25C34.2505 19.25 32.6926 18.6047 31.544 17.456C30.3953 16.3074 29.75 14.7495 29.75 13.125C29.75 11.5005 30.3953 9.94263 31.544 8.79397C32.6926 7.64531 34.2505 7 35.875 7ZM13.125 7C14.7495 7 16.3074 7.64531 17.456 8.79397C18.6047 9.94263 19.25 11.5005 19.25 13.125C19.25 14.7495 18.6047 16.3074 17.456 17.456C16.3074 18.6047 14.7495 19.25 13.125 19.25C11.5005 19.25 9.94263 18.6047 8.79397 17.456C7.64531 16.3074 7 14.7495 7 13.125C7 11.5005 7.64531 9.94263 8.79397 8.79397C9.94263 7.64531 11.5005 7 13.125 7Z" />
      </svg>
    );
  }
);

MenuBar.displayName = "MenuBar";
CloseIcon.displayName = "CloseIcon";
SettingsIcon.displayName = "SettingsIcon";
Support.displayName = "Support";
ArrowSimple.displayName = "ArrowSimple";
Customers.displayName = "Customers";
Workers.displayName = "Workers";
Add.displayName = "Add";
Bars.displayName = "Bars";
Attachments.displayName = "Attachments";
Check.displayName = "Check";
Filter.displayName = "Filter";
Download.displayName = "Download";
Refresh.displayName = "Refresh";
User.displayName = "User";
CreditCard.displayName = "CreditCard";
AddUser.displayName = "AddUser";
Question.displayName = "Question";
Logout.displayName = "Logout";
Location.displayName = "Location";
Notifications.displayName = "Notifications";
Envelope.displayName = "Envelope";
GlobeIcon.displayName = "GlobeIcon";
GoogleIcon.displayName = "GoogleIcon";
LockIcon.displayName = "LockIcon";
Arrow.displayName = "Arrow";
Phone.displayName = "Phone";
Message.displayName = "Message";
Afna.displayName = "Afna";
Office.displayName = "Office";
Search.displayName = "Search";
Trophy.displayName = "Trophy";
House.displayName = "House";
MoneyInHand.displayName = "MoneyInHand";
BuyHouse.displayName = "BuyHouse";
RentHouse.displayName = "RentHouse";
SellHouse.displayName = "SellHouse";
Squares.displayName = "Squares";
Bed.displayName = "Bed";
Bath.displayName = "Bath";
Time.displayName = "Time";
Info.displayName = "Info";
People.displayName = "People";

export {
  MenuBar,
  LockIcon,
  CloseIcon,
  GoogleIcon,
  Notifications,
  Phone,
  Office,
  Afna,
  Message,
  Arrow,
  GlobeIcon,
  Envelope,
  SettingsIcon,
  Support,
  ArrowSimple,
  Location,
  Customers,
  Workers,
  Add,
  Bars,
  Attachments,
  Check,
  Filter,
  Download,
  Refresh,
  User,
  CreditCard,
  AddUser,
  Question,
  Logout,
  Search,
  Trophy,
  House,
  MoneyInHand,
  BuyHouse,
  RentHouse,
  SellHouse,
  Squares,
  Bed,
  Bath,
  Time,
  Info,
  People,
};
